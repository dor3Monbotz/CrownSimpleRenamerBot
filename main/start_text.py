from pyrogram import Client, filters, enums
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup 
from config import ADMIN
 

@Client.on_message(filters.command("start") & filters.private)                             
async def start_cmd(bot, msg):
    txt="·¥õ ú…™s …™s ·¥ò·¥á Äs·¥è…¥·¥Ä ü ·¥ús·¥á  ô·¥è·¥õ üôè. ·¥Ö·¥è  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ  è·¥è·¥ú Ä ·¥è·¥°…¥  ô·¥è·¥õ? üëá ·¥Ñ ü…™·¥Ñ·¥ã ·¥õ ú·¥á s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á ·¥õ·¥è ·¥Ö·¥á·¥ò ü·¥è è"
    btn = InlineKeyboardMarkup([[
        InlineKeyboardButton("ü§ñ SOURCE CODE", url="https://github.com/dor3Monbotz/CrownSimpleRenamerBot")
        ],[
        InlineKeyboardButton("üñ•Ô∏è How To Deploy (ask to owner)", url="https://t.me/little_little_hackur")
    ]])
    if msg.from_user.id != ADMIN:
        await msg.reply_text(text=txt, reply_markup=btn, disable_web_page_preview = True)
        return
    await start(bot, msg, cb=False)


@Client.on_callback_query(filters.regex("start"))
async def start(bot, msg, cb=True):   
    txt=f"üôè…¥·¥Ä·¥ç·¥Äs·¥õ·¥áüôè {msg.from_user.mention} …™ ·¥Ä·¥ç s…™·¥ç·¥ò ü·¥á  Ä·¥á…¥·¥Ä·¥ç·¥á  ô·¥è·¥õ ·¥°…™·¥õ ú ·¥ò·¥á Äs·¥è…¥·¥Ä ü ·¥ús·¥ás.\n·¥õ ú…™s  ô·¥è·¥õ …™s ·¥ç·¥Ä·¥Ö·¥á  ô è <b><a href=https://github.com/dor3Monbotz</a></b>"                                     
    button= [[
        InlineKeyboardButton("ü§ñ Bot Updates", url="https://t.me/projectcrown")
        ],[
        InlineKeyboardButton("‚ÑπÔ∏è Help", callback_data="help"),
        InlineKeyboardButton("üì° About", callback_data="about") 
    ]]  
    if cb:
        await msg.message.edit(text=txt, reply_markup=InlineKeyboardMarkup(button), disable_web_page_preview = True, parse_mode=enums.ParseMode.HTML)
    else:
        await msg.reply_text(text=txt, reply_markup=InlineKeyboardMarkup(button), disable_web_page_preview = True, parse_mode=enums.ParseMode.HTML)


@Client.on_callback_query(filters.regex("help"))
async def help(bot, msg):
    txt=f"·¥ä·¥ús·¥õ s·¥á…¥·¥Ö ·¥Ä “ì…™ ü·¥á ·¥Ä…¥·¥Ö /rename <new name> ·¥°…™·¥õ ú  Ä·¥á·¥ò ü·¥Ä è·¥á·¥Ö  è·¥è·¥ú Ä “ì…™ ü·¥á\n\n Ä·¥á·¥ò ü è ·¥Ä ·¥ò ú·¥è·¥õ·¥è ·¥Ä…¥·¥Ö s·¥á…¥·¥Ö /set ·¥õ·¥è s·¥á·¥õ ·¥õ·¥á·¥ç·¥ò·¥è Ä·¥Ä Ä è ·¥õ ú·¥ú·¥ç ô…¥·¥Ä…™ ü\n/view ·¥õ·¥è s·¥á·¥á  è·¥è·¥ú Ä ·¥õ ú·¥ú·¥ç ô…¥·¥Ä…™ ü"
    button= [[        
        InlineKeyboardButton("üö´ Close", callback_data="del"),
        InlineKeyboardButton("‚¨ÖÔ∏è Back", callback_data="start") 
    ]]  
    await msg.message.edit(text=txt, reply_markup=InlineKeyboardMarkup(button), disable_web_page_preview = True)


@Client.on_callback_query(filters.regex("about"))
async def about(bot, msg):
    me=await bot.get_me()
    Master=f"<a href=https://t.me/little_little_hackur>·¥ã·¥ú…¥·¥Ä ü …¢·¥Ä…™·¥ã·¥°·¥Ä·¥Ö</a> & <a href=https://t.me/projectcrown>·¥ò Ä·¥è·¥ä·¥á·¥Ñ·¥õ ·¥Ñ Ä·¥è·¥°…¥</a>"  
    Source="<a href=https://github.com/dor3Monbotz/CrownSimpleRenamerBot>Click Here</a>"
    txt=f"<b> ô·¥è·¥õ …¥·¥Ä·¥ç·¥á: {me.mention}\n ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä: <a href=https://t.me/little_little_hackur</a>\n ô·¥è·¥õ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás: <a href=https://t.me/projectcrown>·¥Ñ Ä·¥è·¥°…¥  ô·¥è·¥õ·¥¢</a>\nMy ·¥ç·¥Äs·¥õ·¥á Ä's: {Master}\ns·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á: {Source}</b>"                 
    button= [[        
        InlineKeyboardButton("üö´ Close", callback_data="del"),
        InlineKeyboardButton("‚¨ÖÔ∏è Back", callback_data="start") 
    ]]  
    await msg.message.edit(text=txt, reply_markup=InlineKeyboardMarkup(button), disable_web_page_preview = True, parse_mode=enums.ParseMode.HTML)


@Client.on_callback_query(filters.regex("del"))
async def closed(bot, msg):
    try:
        await msg.message.delete()
    except:
        return


